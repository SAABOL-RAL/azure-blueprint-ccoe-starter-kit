# File: .github/workflows/provision-all.yml
name: Provision All Subscriptions

# Only run this when manually invoked
on:
  workflow_dispatch:

# We need id-token permissions to mint a GitHub‐OIDC JWT for azure/login@v2
permissions:
  id-token: write
  contents: read

env:
  # These secrets must all be defined under Settings → Secrets → Actions
  AZURE_TENANT_ID:      ${{ secrets.AZURE_TENANT_ID }}
  AZURE_OIDC_CLIENT_ID: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
  MANAGEMENT_SUB_ID:    ${{ secrets.MANAGEMENT_SUB_ID }}

jobs:
  provision-all-subs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login via OIDC (azure/login@v2)
        uses: azure/login@v2
        with:
          client-id:                  ${{ env.AZURE_OIDC_CLIENT_ID }}
          tenant-id:                  ${{ env.AZURE_TENANT_ID }}
          subscription-id:            ${{ env.MANAGEMENT_SUB_ID }}
          auth-type:                  service_principal
          use-github-federated-token: true
          allow-no-subscriptions:     true
          audience:                   api://AzureADTokenExchange

          # ——— Or, if you must use classic SP credentials instead of OIDC, comment out above and uncomment below:
          # client-id:             ${{ secrets.CLASSIC_SP_CLIENT_ID }}
          # client-secret:         ${{ secrets.CLASSIC_SP_CLIENT_SECRET }}
          # tenant-id:             ${{ secrets.AZURE_TENANT_ID }}
          # subscription-id:       ${{ secrets.MANAGEMENT_SUB_ID }}
          # auth-type:             service_principal
          # allow-no-subscriptions: true

      - name: Install “account” CLI extension
        run: |
          az extension add --name account
        # If you ever want the very latest preview version instead, you can add:
        # az extension add --name account --allow-preview

      - name: Run provisioning script
        shell: pwsh
        run: |
          cd ./scripts
          pwsh ./provision-subscriptions.ps1

      - name: Confirm completion
        run: echo "✅ Finished creating and assigning subscriptions."
