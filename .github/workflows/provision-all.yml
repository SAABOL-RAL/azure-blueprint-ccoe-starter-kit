# File: .github/workflows/provision-all.yml
name: Provision All Subscriptions

# This workflow only runs when you manually click "Run workflow"
on:
  workflow_dispatch:

# In order to fetch an OIDC token, the job needs id-token permissions.
permissions:
  id-token: write
  contents: read

env:
  # These must exist as Repository‐scoped secrets under Settings → Secrets → Actions
  AZURE_TENANT_ID:      ${{ secrets.AZURE_TENANT_ID }}         
  AZURE_OIDC_CLIENT_ID: ${{ secrets.AZURE_OIDC_CLIENT_ID }}    
  MANAGEMENT_SUB_ID:    ${{ secrets.MANAGEMENT_SUB_ID }}       

jobs:
  provision-all-subs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login via OIDC (azure/login@v2)
        uses: azure/login@v2
        with:
          client-id:               ${{ env.AZURE_OIDC_CLIENT_ID }}
          tenant-id:               ${{ env.AZURE_TENANT_ID }}
          subscription-id:         ${{ env.MANAGEMENT_SUB_ID }}
          auth-type:               service_principal
          allow-no-subscriptions:  true
          audience:                api://AzureADTokenExchange

          # ——— OR Classic Client-Secret Mode ———
          # If for some reason you cannot use GitHub‐OIDC, comment out the above block and uncomment below:
          # client-id:             ${{ secrets.CLASSIC_SP_CLIENT_ID }}
          # client-secret:         ${{ secrets.CLASSIC_SP_CLIENT_SECRET }}
          # tenant-id:             ${{ secrets.AZURE_TENANT_ID }}
          # subscription-id:       ${{ secrets.MANAGEMENT_SUB_ID }}
          # auth-type:             service_principal
          # allow-no-subscriptions: true

      - name: Run provision-subscriptions.ps1
        shell: pwsh
        run: |
          cd ./scripts
          pwsh ./provision-subscriptions.ps1

      - name: Confirm completion
        run: echo "✅ All subscriptions have been created and assigned into their Management Groups."
