# ==========================================================================
# Enterprise Azure Landing Zone - Deployment Workflow
# ==========================================================================
# Last Updated: 2025-06-09 22:40:25
# User: GEP-V

name: Deploy Azure Landing Zone

on:
  push:
    branches:
      - main
    paths:
      - 'landing-zone/**'
      - '.github/workflows/deploy-landing-zone.yml'
  
  workflow_dispatch:
    inputs:
      deploymentType:
        description: 'Component to deploy'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - policies
          - diagnostics
          - networking

permissions:
  id-token: write
  contents: read

env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  MANAGEMENT_SUBSCRIPTION_ID: ${{ secrets.MANAGEMENT_SUBSCRIPTION_ID }}
  RESOURCE_GROUP_NAME: rg-management
  LOCATION: eastus2

jobs:
  deploy-management:
    name: Deploy Management Resources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.MANAGEMENT_SUBSCRIPTION_ID }}

      - name: Create Management Resource Group
        run: |
          echo "Creating management resource group..."
          az group create \
            --name ${{ env.RESOURCE_GROUP_NAME }} \
            --location ${{ env.LOCATION }} \
            --tags Environment=Production

      - name: Deploy Policy Assignment
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'policies' || github.event.inputs.deploymentType == '' }}
        run: |
          echo "Deploying policy assignment with parameter file..."
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --name policy-${{ github.run_id }} \
            --template-file ./landing-zone/modules/policy.bicep \
            --parameters @./landing-zone/parameters/policy-parameters.json \
            --verbose

      - name: Deploy Log Analytics Workspace
        id: log_analytics
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'diagnostics' || github.event.inputs.deploymentType == '' }}
        run: |
          echo "Deploying Log Analytics workspace..."
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --name workspace-${{ github.run_id }} \
            --template-file ./landing-zone/modules/log-analytics.bicep \
            --parameters workspaceName=log-analytics-mgmt \
                         location=${{ env.LOCATION }} \
                         retentionInDays=30 \
                         sku=PerGB2018 \
            --verbose
          
          # Get workspace ID for later use
          WORKSPACE_ID=$(az resource list --resource-group ${{ env.RESOURCE_GROUP_NAME }} --resource-type Microsoft.OperationalInsights/workspaces --query "[0].id" -o tsv)
          echo "WORKSPACE_ID=$WORKSPACE_ID" >> $GITHUB_ENV
          echo "Log Analytics workspace ID: $WORKSPACE_ID"

      - name: List Deployed Resources
        run: |
          echo "Listing all resources in the management resource group:"
          az resource list --resource-group ${{ env.RESOURCE_GROUP_NAME }} -o table