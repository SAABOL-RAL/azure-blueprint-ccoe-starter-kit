# ==========================================================================
# Enterprise Azure Landing Zone - Connectivity Resources Deployment
# ==========================================================================
# PROMPT ENGINEERING GUIDANCE:
# - This workflow deploys the connectivity resources for an Enterprise Azure Landing Zone
# - IMPORTANT: The CONNECTIVITY_SUBSCRIPTION_ID secret MUST be configured in your repository
# - Configure federated identity with exact subject: repo:ORG/REPO:environment:ENVIRONMENT_NAME
# - Adjust parameters files in connectivity/ directory for your environment needs

name: Deploy Connectivity Resources

# ==========================================================================
# EVENT TRIGGERS
# PROMPT GUIDANCE: Define when this workflow should run
# ==========================================================================
on:
  push:
    branches:
      - main
    paths:
      - 'connectivity/**'
      - '.github/workflows/deploy-connectivity.yml'
  
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - nonproduction
          - development
      region:
        description: 'Azure region for deployment'
        required: true
        default: 'eastus2'
        type: string
      subscriptionId:
        description: 'Optional: Override subscription ID (leave blank to use default)'
        required: false
        type: string

# ==========================================================================
# PERMISSIONS
# PROMPT GUIDANCE: Minimum required permissions for OIDC auth
# ==========================================================================
permissions:
  id-token: write
  contents: read

# ==========================================================================
# ENVIRONMENT VARIABLES
# PROMPT GUIDANCE: Define global variables with clear comments
# ==========================================================================
env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  # CRITICAL: This must be set in repository secrets!
  CONNECTIVITY_SUBSCRIPTION_ID: ${{ secrets.CONNECTIVITY_SUBSCRIPTION_ID }}
  RESOURCE_GROUP_NAME: rg-connectivity-hub
  LOCATION: ${{ github.event.inputs.region || 'eastus2' }}
  ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}

jobs:
  # ==========================================================================
  # VALIDATION AND SETUP JOB
  # PROMPT GUIDANCE: Verify all prerequisites before deployment
  # ==========================================================================
  verify-prerequisites:
    name: Verify Prerequisites
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          # Verify tenant ID
          if [ -z "${{ secrets.AZURE_TENANT_ID }}" ]; then
            echo "::error::AZURE_TENANT_ID secret is not set"
            exit 1
          fi
          
          # Verify client ID
          if [ -z "${{ secrets.AZURE_CLIENT_ID }}" ]; then
            echo "::error::AZURE_CLIENT_ID secret is not set"
            exit 1
          fi
          
          # Verify subscription ID
          if [ -z "${{ secrets.CONNECTIVITY_SUBSCRIPTION_ID }}" ]; then
            echo "::error::CONNECTIVITY_SUBSCRIPTION_ID secret is not set"
            exit 1
          fi
          
          echo "All required secrets are configured."
          
          # Determine subscription to use
          SUB_ID="${{ github.event.inputs.subscriptionId || secrets.CONNECTIVITY_SUBSCRIPTION_ID }}"
          echo "Using subscription ID: ${SUB_ID:0:8}..."
          echo "SUBSCRIPTION_ID=$SUB_ID" >> $GITHUB_ENV

  # ==========================================================================
  # VALIDATION JOB
  # PROMPT GUIDANCE: Validate templates before deployment
  # ==========================================================================
  validate:
    name: Validate Templates
    needs: verify-prerequisites
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.SUBSCRIPTION_ID }}

      - name: List repository structure
        run: |
          echo "Repository contents:"
          ls -la
          
          if [ -d "connectivity" ]; then
            echo "Connectivity folder contents:"
            ls -la connectivity
          else
            echo "::warning::Connectivity folder not found!"
          fi

      # Additional validation steps from your original workflow...

  # Remaining jobs from your original workflow, ensuring each azure/login action 
  # includes the subscription-id parameter...