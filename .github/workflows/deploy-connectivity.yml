# ==========================================================================
# Enterprise Azure Landing Zone - Connectivity Resources Deployment
# ==========================================================================
# PROMPT ENGINEERING GUIDANCE:
# This workflow deploys core connectivity resources for an enterprise landing zone:
# - Hub virtual networks, subnets, and NSGs
# - Azure Firewall and policy
# - Azure Bastion
# - VNet peering between hub and spokes
# - Private DNS zones
#
# SECRETS CONFIGURATION:
# - AZURE_TENANT_ID: Your Azure Active Directory tenant ID
# - AZURE_CLIENT_ID: App registration client ID with federated credentials
# - CONNECTIVITY_SUBSCRIPTION_ID: Dedicated subscription for network resources
#
# CUSTOMIZATION TIPS:
# - Adjust resource naming in parameters files to match your standards
# - Modify address spaces in hub-network.parameters.json for your IP scheme
# - Set firewall SKU based on your requirements (Standard vs Premium)
# - Add/remove private DNS zones based on services you plan to use

name: Deploy Connectivity Resources

on:
  push:
    branches:
      - main
    paths:
      - 'connectivity/**'
      - '.github/workflows/deploy-connectivity.yml'
  
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - nonproduction
          - development
      region:
        description: 'Azure region for deployment'
        required: true
        default: 'eastus2'
        type: string

permissions:
  id-token: write  # Required for OIDC federation
  contents: read   # Required to read repo files

# ==========================================================================
# ENVIRONMENT VARIABLES - CRITICAL SECRET CONFIGURATION
# ==========================================================================
# PROMPT GUIDANCE: 
# - Verify all three secrets exist in your GitHub repository settings
# - CONNECTIVITY_SUBSCRIPTION_ID must be added manually before running
# - Do not hardcode subscription IDs in workflow files
# - If secrets are missing, the workflow will fail-fast with a clear error
# ==========================================================================
env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  CONNECTIVITY_SUBSCRIPTION_ID: ${{ secrets.CONNECTIVITY_SUBSCRIPTION_ID }}
  RESOURCE_GROUP_NAME: rg-connectivity-hub
  LOCATION: ${{ github.event.inputs.region || 'eastus2' }}
  ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}

jobs:
  verify-prerequisites:
    name: Verify Prerequisites
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          # Verify tenant ID
          if [ -z "${{ secrets.AZURE_TENANT_ID }}" ]; then
            echo "::error::AZURE_TENANT_ID secret is not set"
            exit 1
          fi
          
          # Verify client ID
          if [ -z "${{ secrets.AZURE_CLIENT_ID }}" ]; then
            echo "::error::AZURE_CLIENT_ID secret is not set"
            exit 1
          fi
          
          # Verify subscription ID
          if [ -z "${{ secrets.CONNECTIVITY_SUBSCRIPTION_ID }}" ]; then
            echo "::error::CONNECTIVITY_SUBSCRIPTION_ID secret is not set"
            exit 1
          fi
          
          echo "All required secrets are configured."
          
          # Determine subscription to use
          SUB_ID="${{ secrets.CONNECTIVITY_SUBSCRIPTION_ID }}"
          echo "Using subscription ID: ${SUB_ID:0:8}..."
          echo "SUBSCRIPTION_ID=$SUB_ID" >> $GITHUB_ENV

  # Remaining jobs from previous version...
  validate:
    name: Validate Templates
    needs: verify-prerequisites
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ==========================================================================
      # AZURE LOGIN WITH OIDC - CRITICAL CONFIGURATION
      # ==========================================================================
      # PROMPT GUIDANCE:
      # - Ensure subscription-id is provided (required after GitHub Actions update)
      # - Verify federated credential in Azure with matching subject:
      #   repo:ORG/REPO:environment:production
      # - If authentication fails, check app registration and permissions
      # ==========================================================================
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.SUBSCRIPTION_ID }}

  # Additional jobs would follow with similar structure