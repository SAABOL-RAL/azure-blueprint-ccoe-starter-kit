# File: .github/workflows/deploy-devtest-vm.yml
name: Deploy DevTest Lab VM

on:
  push:
    branches:
      - main
    paths:
      - 'devtest-lab/**'

env:
  # These three secrets must already exist in GitHub → Settings → Secrets → Actions
  AZURE_TENANT_ID:      ${{ secrets.AZURE_TENANT_ID }}         # Your Azure AD Tenant ID
  AZURE_OIDC_CLIENT_ID: ${{ secrets.AZURE_OIDC_CLIENT_ID }}    # Client ID of your App Registration (federated SP)
  TARGET_SUBSCRIPTION:  ${{ secrets.LANDING_A2_SUB_ID }}       # Subscription ID where DevTest Lab lives
  TARGET_RG:            "rg-devtest-lab"                       # Name of the Resource Group for DevTest Lab

jobs:
  deploy-devtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login via OIDC
        uses: azure/login@v1
        with:
          # These fields must exactly match your App Registration & Azure configuration:
          client-id:                ${{ env.AZURE_OIDC_CLIENT_ID }}
          tenant-id:                ${{ env.AZURE_TENANT_ID }}
          subscription-id:          ${{ env.TARGET_SUBSCRIPTION }}
          allow-no-subscriptions:   true
          auth-type:                SERVICE_PRINCIPAL
          audience:                 api://AzureADTokenExchange
          subject:                  repo:SAABOLImpactVenture/enterprise-azure-governance-template-specs-deployment-stacks:ref:refs/heads/main

      - name: Deploy DevTest Lab Bicep
        run: |
          az deployment group create \
            --resource-group ${{ env.TARGET_RG }} \
            --template-file devtest-lab/devtest-vm.bicep \
            --parameters devtest-lab/parameters/devtest-vm.parameters.json

      - name: Configure Just-In-Time Access
        run: pwsh ./devtest-lab/scripts/enable-jit.ps1

      - name: Configure NSG Hardening
        run: pwsh ./devtest-lab/scripts/configure-nsg.ps1

      - name: Enable Diagnostics
        run: pwsh ./devtest-lab/scripts/enable-diagnostics.ps1
