name: Deploy Management Resources

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy-management:
    runs-on: ubuntu-latest

    env:
      RESOURCE_GROUP_NAME: rg-management
      LOCATION: eastus2
      ENVIRONMENT: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.MANAGEMENT_SUBSCRIPTION_ID }}

      - name: Create/Update Management Resource Group
        run: |
          az group create \
            --name $RESOURCE_GROUP_NAME \
            --location $LOCATION

      - name: Deploy Policy Module
        run: |
          echo "Starting policy deployment..."
          az deployment group create \
            --resource-group $RESOURCE_GROUP_NAME \
            --template-file ./landing-zone/modules/policy.bicep \
            --parameters assignmentName="enforce-tag-policy" \
                        policyDefinitionId="/providers/Microsoft.Authorization/policyDefinitions/1e30110a-5ceb-460c-a204-c1c3969c6d62" \
                        policyDescription="Enforces the presence of required tags on all resources" \
                        displayName="Require Tags on All Resources" \
                        policyParameters="{'tagName':{'value':'Environment'}}" \
                        enforcementMode="Default" \
                        useIdentity=false

      # Create Log Analytics workspace first
      - name: Deploy Log Analytics Workspace
        id: deploy_workspace
        run: |
          echo "Deploying Log Analytics workspace..."
          WORKSPACE_DEPLOYMENT=$(az deployment group create \
            --resource-group $RESOURCE_GROUP_NAME \
            --template-uri "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.operationalinsights/log-analytics-create/azuredeploy.json" \
            --parameters workspaceName="log-analytics-management" \
                         location="$LOCATION" \
            --query "properties.outputs.workspaceResourceId.value" -o tsv)
          
          echo "WORKSPACE_ID=$WORKSPACE_DEPLOYMENT" >> $GITHUB_ENV
          echo "Log Analytics workspace deployed: $WORKSPACE_DEPLOYMENT"

      # Create a test VNet for diagnostics
      - name: Create Management VNet
        run: |
          echo "Creating management VNet..."
          az network vnet create \
            --resource-group $RESOURCE_GROUP_NAME \
            --name vnet-management \
            --address-prefix 10.0.0.0/16 \
            --subnet-name subnet-management \
            --subnet-prefix 10.0.0.0/24 \
            --location $LOCATION

      # Now deploy diagnostics with the created resources
      - name: Deploy Diagnostics Module
        run: |
          echo "Deploying diagnostics with created workspace and VNet..."
          az deployment group create \
            --resource-group $RESOURCE_GROUP_NAME \
            --template-file ./landing-zone/modules/diagnostics.bicep \
            --parameters workspaceName="log-analytics-management" \
                         workspaceRetention=30 \
                         workspaceSku="PerGB2018" \
                         environmentName="production" \
                         enableResourceDiagnostics=true \
                         diagnosticsStorageAccountName="stmgmtdiag${{ github.run_id }}" \
                         vnetName="vnet-management" \
                         workspaceId="$WORKSPACE_ID" \
            --verbose

      # Deploy other modules if they don't have similar parameter issues
      - name: Deploy Role Assignments
        run: |
          echo "Skipping role assignments for now - ensure parameters are correct first"

      - name: List Deployed Resources
        run: |
          az resource list --resource-group $RESOURCE_GROUP_NAME -o table