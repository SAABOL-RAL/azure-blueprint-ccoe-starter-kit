# ==========================================================================
# Enterprise Azure Landing Zone - Deployment Workflow
# ==========================================================================
# PROMPT ENGINEERING GUIDANCE:
# This workflow handles actual deployment of landing zone components:
# - Runs on push to main branch and manual triggers
# - Creates resource groups if they don't exist
# - Deploys policy assignments with all required parameters
# - Deploys Log Analytics and diagnostic settings
# - Sets up network and security components
#
# REQUIRED SECRETS CONFIGURATION:
# - AZURE_TENANT_ID: Your Azure Active Directory tenant ID
# - AZURE_CLIENT_ID: App registration client ID with federated credentials
# - MANAGEMENT_SUBSCRIPTION_ID: For management resources
# - LANDINGZONE_SUBSCRIPTION_ID: For landing zone deployments

name: Deploy Azure Landing Zone

on:
  push:
    branches:
      - main
    paths:
      - 'landing-zone/**'
      - '.github/workflows/deploy-landing-zone.yml'
  
  workflow_dispatch:
    inputs:
      deploymentType:
        description: 'Component to deploy'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - policies
          - diagnostics
          - networking

# ==========================================================================
# PERMISSIONS
# PROMPT GUIDANCE: Required permissions for resource deployment
# ==========================================================================
permissions:
  id-token: write  # Required for OIDC authentication
  contents: read   # Required to read repo files

# ==========================================================================
# ENVIRONMENT VARIABLES
# ==========================================================================
env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  MANAGEMENT_SUBSCRIPTION_ID: ${{ secrets.MANAGEMENT_SUBSCRIPTION_ID }}
  RESOURCE_GROUP_NAME: rg-management
  LOCATION: eastus2
  CURRENT_DATE: "2025-06-09"

jobs:
  # ==========================================================================
  # DEPLOYMENT JOB
  # ==========================================================================
  deploy-management:
    name: Deploy Management Resources
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.MANAGEMENT_SUBSCRIPTION_ID }}

      - name: Create Management Resource Group
        run: |
          echo "Creating management resource group..."
          az group create \
            --name ${{ env.RESOURCE_GROUP_NAME }} \
            --location ${{ env.LOCATION }} \
            --tags Environment=Production

      - name: Deploy Policy Assignment
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'policies' || github.event.inputs.deploymentType == '' }}
        run: |
          echo "Starting policy deployment with complete parameters..."
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --name policy-assignment-${{ github.run_id }} \
            --template-file ./landing-zone/modules/policy.bicep \
            --parameters assignmentName="enforce-tag-policy" \
                         policyDefinitionId="/providers/Microsoft.Authorization/policyDefinitions/1e30110a-5ceb-460c-a204-c1c3969c6d62" \
                         policyDescription="Enforces Environment tag on all resources" \
                         displayName="Require Environment Tag" \
                         enforcementMode="Default" \
                         policyParameters='{"tagName":{"value":"Environment"},"tagValue":{"value":"Production"}}' \
            --verbose

      - name: Deploy Log Analytics Workspace
        id: deploy_workspace
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'diagnostics' || github.event.inputs.deploymentType == '' }}
        run: |
          echo "Deploying Log Analytics workspace..."
          WORKSPACE_DEPLOYMENT=$(az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --name workspace-${{ github.run_id }} \
            --template-uri "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.operationalinsights/log-analytics-create/azuredeploy.json" \
            --parameters workspaceName="log-analytics-mgmt" \
                       location="${{ env.LOCATION }}" \
            --query "properties.outputs.workspaceResourceId.value" -o tsv)
          
          echo "WORKSPACE_ID=$WORKSPACE_DEPLOYMENT" >> $GITHUB_ENV
          echo "Log Analytics workspace deployed: $WORKSPACE_DEPLOYMENT"

      - name: Create Management VNet
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'networking' || github.event.inputs.deploymentType == '' }}
        run: |
          echo "Creating management VNet..."
          az network vnet create \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --name vnet-management \
            --address-prefix 10.0.0.0/16 \
            --subnet-name subnet-management \
            --subnet-prefix 10.0.0.0/24 \
            --location ${{ env.LOCATION }} \
            --tags Environment=Production

      - name: Deploy Diagnostics Settings
        if: ${{ github.event.inputs.deploymentType == 'all' || github.event.inputs.deploymentType == 'diagnostics' || github.event.inputs.deploymentType == '' }}
        run: |
          echo "Deploying diagnostics with created resources..."
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --name diagnostics-${{ github.run_id }} \
            --template-file ./landing-zone/modules/diagnostics.bicep \
            --parameters workspaceName="log-analytics-mgmt" \
                       workspaceRetention=30 \
                       workspaceSku="PerGB2018" \
                       environmentName="Production" \
                       enableResourceDiagnostics=true \
                       diagnosticsStorageAccountName="stmgmtdiag${{ github.run_id }}" \
                       vnetName="vnet-management" \
                       workspaceId="${{ env.WORKSPACE_ID }}" \
            --verbose

      - name: List Deployed Resources
        run: |
          echo "Listing all resources in the management resource group"
          az resource list --resource-group ${{ env.RESOURCE_GROUP_NAME }} -o table