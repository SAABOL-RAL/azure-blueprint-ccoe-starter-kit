{
  /*
  ============================================================
  Azure Policy Assignment with Tokenized Subscription ID
  ============================================================
  Last Updated: 2025-06-09 22:20:00 UTC
  Current User: GEP-V
  
  PROMPT ENGINEERING NOTES:
  When creating policy assignment templates for Azure:
  
  1. Always use tokens for subscription IDs and tenant-specific values
     - Replace hardcoded IDs with ${TOKEN_NAME} format
     - This prevents security risks and enables deployment flexibility
  
  2. Include comments explaining:
     - The policy's purpose and impact
     - Any parameters and their expected values
     - The scope of application (subscription, resource group, etc.)
  
  3. Request schema validation when generating templates
     - "Ensure the JSON follows Azure policy assignment schema"
     - "Make sure all required properties are included"
  
  4. Specify the format needed for ARM deployment vs. Azure CLI
     - ARM templates use parameters and variables differently
     - CLI-based approaches use direct token replacement
  
  5. When using with Bicep modules:
     - Ensure parameter names match between template specs and Bicep
     - Check for reserved parameter names like 'description' which may conflict
  */
  
  "name": "enforce-tag-policy",
  "properties": {
    // The scope determines where the policy applies
    // Using a token for subscription ID rather than hardcoding
    "scope": "/subscriptions/${LANDINGZONE_SUBSCRIPTION_ID}/resourceGroups/landingZone-RG",
    
    // The policy definition to assign
    "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1e30110a-5ceb-460c-a204-c1c3969c6d62",
    
    // Policy parameters section - UPDATED to include both required parameters
    "parameters": {
      "tagName": {
        "value": "Environment"
      },
      "tagValue": {
        "value": "Production"
      }
    },
    
    // Optional: description explaining the purpose of this policy assignment
    "description": "Enforces the presence of an Environment tag with value 'Production' on all resources",
    
    // Optional: display name for the Azure portal
    "displayName": "Require Environment Tag on All Resources",
    
    // Enforcement mode as a string (Default = enforced)
    "enforcementMode": "Default"
  }
}